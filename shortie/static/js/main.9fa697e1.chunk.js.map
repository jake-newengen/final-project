{"version":3,"sources":["utils/auth.ts","layouts/Primary.tsx","utils/axios.ts","components/CopyToClipboard.tsx","components/TableRow.tsx","routes/Urls.tsx","routes/Login.tsx","routes/Register.tsx","routes/Logout.tsx","layouts/Auth.tsx","App.tsx","index.tsx"],"names":["isAuthenticated","window","localStorage","getItem","PrimaryLayout","navigate","useNavigate","useState","authenticating","setAuthenticating","menuOpen","setMenuOpen","useEffect","className","to","width","height","viewBox","fill","xmlns","d","activeClassName","as","type","onClick","stroke","strokeLinecap","strokeLinejoin","strokeWidth","role","aria-orientation","aria-labelledby","retrieve","endpoint","params","a","axios","get","headers","Authorization","paramsSerializer","Qs","stringify","arrayFormat","send","data","post","CopyToClipboard","textRef","buttonText","text","setText","e","preventDefault","current","select","setSelectionRange","document","execCommand","setTimeout","TableRow","date","url","ref","useRef","id","external_link","short_link","created_at","total_visits","format","Date","readOnly","defaultValue","Urls","mounted","short_link_ref","urls","setUrls","fetching","setFetching","modalOpen","setModalOpen","newShortLinkModal","setNewShortLinkModal","newShortLink","setNewShortLink","useForm","mode","register","handleSubmit","fetchUrls","res","toggleModal","toggleNewShortLinkModal","console","log","colSpan","length","map","key","aria-modal","aria-label","onSubmit","htmlFor","required","name","placeholder","Login","setLoading","error","setError","errors","watch","access_token","setItem","response","message","method","username","password","Register","processing","setProcessing","reset","Logout","removeItem","AuthLayout","nav","App","path","element","MOUNT_NODE","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9fa697e1.chunk.js","sourcesContent":["const isAuthenticated = (): boolean => {\n  const token = window.localStorage.getItem(\"s-tk\");\n  return token ? true : false;\n};\n\nexport { isAuthenticated };\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { isAuthenticated } from \"utils/auth\";\n\nconst PrimaryLayout = () => {\n  const navigate = useNavigate();\n  const [authenticating, setAuthenticating] = useState(true);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    if(!isAuthenticated()) {\n      navigate(\"/auth/login\");\n    } else {\n      setAuthenticating(false);\n    }\n  }, [])\n\n  function toggleMobileMenu() {\n    setMenuOpen(!menuOpen);\n  }\n\n  if (authenticating) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-200\">\n      <nav className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <Link to=\"/\">\n                  <svg className=\"text-pink-500\" width=\"25\" height=\"25\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M11.7 49C11.7 42.7 16.8 37.6 23.1 37.6H45.5V29.3H23.1C12.2 29.3 3.39999 38.1 3.39999 49C3.39999 59.9 12.2 68.7 23.1 68.7H45.5V60.4H23.1C16.8 60.4 11.7 55.3 11.7 49ZM76.9 29.3H54.5V37.6H76.9C83.2 37.6 88.3 42.7 88.3 49C88.3 55.3 83.2 60.4 76.9 60.4H54.5V68.7H76.9C87.8 68.7 96.6 59.9 96.6 49C96.6 38.1 87.8 29.3 76.9 29.3ZM26.3 49C26.3 51.3 28.2 53.2 30.5 53.2H69.6C71.9 53.2 73.8 51.3 73.8 49C73.8 46.7 71.9 44.8 69.6 44.8H30.5C28.2 44.8 26.3 46.7 26.3 49Z\" fill=\"currentColor\"/>\n                  </svg>\n                </Link>\n              </div>\n              <div className=\"hidden sm:-my-px sm:ml-6 sm:flex\">\n                <NavLink activeClassName=\"border-indigo-500 text-gray-900\" to=\"/urls\" className=\"inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 focus:outline-none hover:border-gray-300 focus:border-indigo-700 transition duration-150 ease-in-out\">\n                  URLs\n                </NavLink>\n              </div>\n            </div>\n            <div className=\"-mr-2 items-center hidden sm:flex\">\n              <span className=\"inline-flex rounded-md shadow-sm ml-2\">\n                <NavLink as=\"button\"  to=\"/auth/logout\"  type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\">\n                  Logout\n                </NavLink>\n              </span>\n            </div>\n            <div className=\"-mr-2 flex items-center sm:hidden\">\n              <button onClick={toggleMobileMenu} className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\n                {menuOpen ? (\n                  <svg className=\"block h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                ) : (\n                  <svg className=\"block h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                  </svg>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {menuOpen && (\n          <div className=\"sm:hidden\">\n            <div className=\"pt-2 pb-3\">\n              <NavLink to=\"/urls\" activeClassName=\"border-l-4 bg-indigo-50\" className=\"block pl-3 pr-4 py-2 border-indigo-500 text-base font-medium text-indigo-700 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out\">Urls</NavLink>\n            </div>\n            <div className=\"pt-4 pb-3 border-t border-gray-200\">\n              <div className=\"mt-3\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                <Link to=\"/logout\" className=\"mt-1 block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100 focus:outline-none focus:text-gray-800 focus:bg-gray-100 transition duration-150 ease-in-out\" role=\"menuitem\">Sign out</Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"py-10\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\nexport { PrimaryLayout };","import axios from \"axios\";\nimport Qs from \"qs\";\n\nconst retrieve = async (endpoint: string, params?: { [key: string]: any }) => {\n  return await axios.get(endpoint, {\n    headers: {\n      Authorization: `Bearer ${window.localStorage.getItem(\"s-tk\")}`\n    },\n    paramsSerializer: function(params) {\n      return Qs.stringify(params, { arrayFormat: \"brackets\" });\n    }\n  });\n};\n\nconst send = async (endpoint: string, data?: { [key: string]: any }) => {\n  return await axios.post(endpoint, data, {\n    headers: {\n      Authorization: `Bearer ${window.localStorage.getItem(\"s-tk\")}`\n    }\n  });\n};\n\nexport { retrieve, send };\n","import React, { useState } from \"react\";\n\ntype CTCProps = {\n  buttonText: string;\n  textRef: any;\n};\n\nconst CopyToClipboard: React.FC<CTCProps> = ({ textRef, buttonText }) => {\n  const [text, setText] = useState(buttonText);\n  \n  function copyToClipboard(e: any) {\n    e.preventDefault();\n\n    if(textRef.current) {\n      textRef.current.select();\n      textRef.current.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      setText(\"Copied\");\n      setTimeout(() => {\n        setText(buttonText)\n      }, 1000)\n    }\n  }\n\n  return (\n    <button\n      type=\"button\"\n      onClick={copyToClipboard}\n      className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\">\n      {text}\n    </button>\n  );\n}\n\nexport { CopyToClipboard };","import React, { useRef } from \"react\";\nimport { CopyToClipboard } from \"./CopyToClipboard\";\nimport { format } from \"date-fns\";\n\ntype TableRowProps = {\n  url: any;\n};\n\nconst TableRow: React.FC<TableRowProps> = ({ url }) => {\n  const ref = useRef(null);\n  const { id, external_link, short_link, created_at, total_visits } = url;\n\n  function formatDate(date: string) {\n    return format(new Date(date), \"MM/dd/yyyy\")\n  }\n\n  return (\n    <tr>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900\">\n        {id}\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">\n        {formatDate(created_at)}\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">\n        <input ref={ref} type=\"text\" readOnly className=\"copyable focus:outline-none select-none w-full\" defaultValue={short_link} />\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">\n        {external_link}\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">\n        {total_visits}\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap text-right text-sm leading-5 font-medium\">\n        <CopyToClipboard buttonText=\"Copy to clipboard\" textRef={ref} />\n      </td>\n    </tr>\n  );\n};\n\nexport { TableRow };","import React, { useEffect, useState, useRef } from \"react\";\n\n// Utils\nimport { retrieve, send } from \"utils/axios\";\nimport { TableRow } from \"components/TableRow\";\nimport { useForm } from \"react-hook-form\";\nimport { CopyToClipboard } from \"components/CopyToClipboard\";\n\nconst Urls = () => {\n  let mounted = true;\n  const short_link_ref = useRef(null);\n  const [urls, setUrls] = useState([]);\n  const [fetching, setFetching] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newShortLinkModal, setNewShortLinkModal] = useState(false);\n  const [newShortLink, setNewShortLink] = useState(\"\");\n  const { register, handleSubmit } = useForm({ mode: \"onChange\" });\n\n  useEffect(() => {\n    fetchUrls()\n    return () => {\n      mounted = false;\n    }\n  }, [])\n\n  async function fetchUrls() {\n    setFetching(true);\n    let res = await retrieve(\"/urls\");\n    if (mounted) {\n      setUrls(res.data.urls);\n    }\n    setFetching(false);\n  }\n\n  function toggleModal() {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleNewShortLinkModal() {\n    setNewShortLinkModal(!newShortLinkModal);\n  }\n\n  async function createShortLink(data: any) {\n    try {\n      let res = await send(\"/urls/create\", data);\n      setNewShortLink(res.data.short_link)\n      toggleModal()\n      toggleNewShortLinkModal()\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function closeNewShortLinkModal() {\n    fetchUrls()\n    toggleNewShortLinkModal()\n  }\n\n  return (\n    <main>\n      <div className=\"my-5 max-w-7xl mx-auto sm:px-6 lg:px-8 flex flex-row-reverse\">\n        <span className=\"inline-flex rounded-md shadow-sm\">\n          <button onClick={toggleModal} type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\">\n            New Shortlink\n          </button>\n        </span>\n      </div>\n      <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\n            <div className=\"align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200\">\n              <table className=\"min-w-full bg-white\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      Created On\n                    </th>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      URL\n                    </th>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      External URL\n                    </th>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      Total Visits\n                    </th>\n                    <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {fetching && (\n                    <tr>\n                      <td colSpan={50} className=\"py-5\">\n                        <p className=\"w-full text-center\">Fetching Shortlinks</p>\n                      </td>\n                    </tr>\n                  )}\n                  {!fetching && urls.length > 0 ? urls.map((url: { [key: string]: any }) => <TableRow key={url.id} url={url} />) : (\n                    <tr>\n                      <td colSpan={50} className=\"py-5\">\n                        <p className=\"w-full text-center\">No urls yet, create one</p>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {newShortLinkModal && (\n        <div className=\"fixed bottom-0 inset-x-0 px-4 pb-6 sm:inset-0 sm:p-0 sm:flex sm:items-center sm:justify-center\">\n          <div className=\"fixed inset-0 transition-opacity\">\n            <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n          </div>\n\n          <div className=\"bg-white rounded-lg px-4 pt-5 pb-4 overflow-hidden shadow-xl transform transition-all sm:max-w-sm sm:w-full sm:p-6\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n            <div>\n              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n                <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"/>\n                </svg>\n              </div>\n              <div className=\"mt-3 text-center sm:mt-5\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\n                  Shortlink Created\n                </h3>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm leading-5 text-gray-500 text-center w-full text-center\">\n                    <input ref={short_link_ref} type=\"text\" readOnly className=\"copyable focus:outline-none select-none w-full text-center\" defaultValue={newShortLink} />\n                  </p>\n                </div>\n                <div className=\"mt-2\">\n                  <CopyToClipboard buttonText=\"Copy to clipboard\" textRef={short_link_ref} />\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-5 sm:mt-6\">\n              <span className=\"flex w-full rounded-md shadow-sm\">\n                <button onClick={closeNewShortLinkModal} type=\"button\" className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-indigo-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                  Close\n                </button>\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {modalOpen && (\n        <div className=\"fixed bottom-0 inset-x-0 px-4 pb-4 sm:inset-0 sm:flex sm:items-center sm:justify-center\">\n          <div onClick={toggleModal} className=\"fixed inset-0 transition-opacity\">\n            <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n          </div>\n          <div className=\"relative bg-white rounded-lg px-4 pt-5 pb-2 overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full sm:p-6\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n            <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\n              <button onClick={toggleModal} type=\"button\" className=\"text-gray-400 hover:text-gray-500 focus:outline-none focus:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Close\">\n                <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                </svg>\n              </button>\n            </div>\n            <form onSubmit={handleSubmit(createShortLink)} className=\"w-full py-5\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\n                    New Shortlink\n                  </h3>\n                  <div className=\"mt-2\">\n                    <div>\n                        <label htmlFor=\"external_link\" className=\"sr-only\">URL\n                        </label>\n                        <div className=\"relative rounded-md shadow-sm w-full\">\n                          <input ref={register({ required: true })} required name=\"external_link\" id=\"external_link\" type=\"text\" className=\"form-input block w-full sm:text-sm sm:leading-5\" placeholder=\"https://example.com\" />\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\n                  <button type=\"submit\" className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                    Create Shortlink\n                  </button>\n                </span>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport { Urls };","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { register, handleSubmit, watch, errors } = useForm()\n\n  async function handleAuth(data: any) {\n    setError(null);\n    setLoading(true);\n\n    try {\n      let res = await axios.post(\"/auth/login\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const { access_token } = res.data;\n\n      if(access_token) {\n        window.localStorage.setItem(\"s-tk\", access_token);\n        navigate(\"/urls\");\n      }\n    }\n    catch (err) {\n      setError(err.response.data.message);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"flex justify-center align-center\">\n          <svg width=\"50\" height=\"50\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11.7 49C11.7 42.7 16.8 37.6 23.1 37.6H45.5V29.3H23.1C12.2 29.3 3.39999 38.1 3.39999 49C3.39999 59.9 12.2 68.7 23.1 68.7H45.5V60.4H23.1C16.8 60.4 11.7 55.3 11.7 49ZM76.9 29.3H54.5V37.6H76.9C83.2 37.6 88.3 42.7 88.3 49C88.3 55.3 83.2 60.4 76.9 60.4H54.5V68.7H76.9C87.8 68.7 96.6 59.9 96.6 49C96.6 38.1 87.8 29.3 76.9 29.3ZM26.3 49C26.3 51.3 28.2 53.2 30.5 53.2H69.6C71.9 53.2 73.8 51.3 73.8 49C73.8 46.7 71.9 44.8 69.6 44.8H30.5C28.2 44.8 26.3 46.7 26.3 49Z\" fill=\"black\"/>\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <form onSubmit={handleSubmit(handleAuth)} method=\"POST\">\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium leading-5 text-gray-700\">\n                Username\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm\">\n                <input ref={register({ required: true })} name=\"username\" id=\"username\" type=\"text\" required className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\" />\n                {errors.username && \"Username is required\"}\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <label htmlFor=\"password\" className=\"block text-sm font-medium leading-5 text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm\">\n                <input ref={register({ required: true })} name=\"password\" id=\"password\" type=\"password\" required className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\" />\n                {errors.password && \"Password is required\"}\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"mt-6\">\n                <p className=\"text-red-500\">{error}</p>\n              </div>\n            )}\n\n            <div className=\"mt-6\">\n              <span className=\"block w-full rounded-md shadow-sm\">\n                <button type=\"submit\" className=\"w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\">\n                  Sign in\n                </button>\n              </span>\n            </div>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm leading-5\">\n                <span className=\"px-2 bg-white text-gray-500\">\n                  Or\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <p className=\"mt-2 text-center text-sm leading-5 text-gray-600 max-w\">\n                <Link to=\"/auth/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">Register for an account</Link>\n              </p>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Login };","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { send } from \"utils/axios\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [processing, setProcessing] = useState(false);\n  const { register, handleSubmit, reset } = useForm({ mode: \"onChange\" });\n\n  async function handleRegister(data: any) {\n    setProcessing(true);\n    try {\n      let res = await send(\"/auth/register\", data);\n\n      if(res.data.access_token) {\n        setProcessing(false);\n        window.localStorage.setItem(\"s-tk\", res.data.access_token);\n        navigate(\"/urls\");\n      } else {\n        reset();\n        setProcessing(false);\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"flex justify-center align-center\">\n          <svg width=\"50\" height=\"50\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11.7 49C11.7 42.7 16.8 37.6 23.1 37.6H45.5V29.3H23.1C12.2 29.3 3.39999 38.1 3.39999 49C3.39999 59.9 12.2 68.7 23.1 68.7H45.5V60.4H23.1C16.8 60.4 11.7 55.3 11.7 49ZM76.9 29.3H54.5V37.6H76.9C83.2 37.6 88.3 42.7 88.3 49C88.3 55.3 83.2 60.4 76.9 60.4H54.5V68.7H76.9C87.8 68.7 96.6 59.9 96.6 49C96.6 38.1 87.8 29.3 76.9 29.3ZM26.3 49C26.3 51.3 28.2 53.2 30.5 53.2H69.6C71.9 53.2 73.8 51.3 73.8 49C73.8 46.7 71.9 44.8 69.6 44.8H30.5C28.2 44.8 26.3 46.7 26.3 49Z\" fill=\"black\"/>\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <form onSubmit={handleSubmit(handleRegister)}>\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium leading-5 text-gray-700\">\n                Username\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm\">\n                <input ref={register({ required: true })} required name=\"username\" id=\"username\" type=\"text\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\" />\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <label htmlFor=\"password\" className=\"block text-sm font-medium leading-5 text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm\">\n                <input ref={register({ required: true })} name=\"password\" id=\"password\" type=\"password\" required className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\" />\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <label htmlFor=\"confirmation\" className=\"block text-sm font-medium leading-5 text-gray-700\">\n                Confirm Password\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm\">\n                <input ref={register({ required: true })} name=\"confirmation\" type=\"password\" required className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\" />\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <span className=\"block w-full rounded-md shadow-sm\">\n                <button type=\"submit\" className=\"w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\">\n                  {processing ? \"Registering Account\" : \"Register\"}\n                </button>\n              </span>\n            </div>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm leading-5\">\n                <span className=\"px-2 bg-white text-gray-500\">\n                  Already have an account?\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <p className=\"mt-2 text-center text-sm leading-5 text-gray-600 max-w\">\n                <Link to=\"/auth/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">Sign In</Link>\n              </p>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Register };","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Logout = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    window.localStorage.removeItem(\"s-tk\");\n    navigate(\"/auth/login\")\n  }, [])\n\n  return null;\n}\n\nexport { Logout };","import React, { useEffect } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { isAuthenticated } from \"utils/auth\";\n\nconst AuthLayout = () => {\n  const nav = useNavigate();\n\n  useEffect(() => {\n    if(isAuthenticated()) {\n      nav(\"/urls\")\n    }\n  }, [])\n\n  return <Outlet />\n}\n\nexport { AuthLayout };","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { PrimaryLayout } from \"layouts/Primary\";\nimport { Urls } from \"routes/Urls\";\nimport { Login } from \"routes/Login\";\nimport { Register } from \"routes/Register\";\nimport { Logout } from \"routes/Logout\";\nimport { AuthLayout } from \"layouts/Auth\";\n\n/**\n * App\n */\nconst App: React.FC<any> = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/auth/*\" element={<AuthLayout />}>\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"logout\" element={<Logout />} />\n          <Route path=\"register\" element={<Register />} />\n        </Route>\n        <Route path=\"/*\" element={<PrimaryLayout />}>\n          <Route path=\"/\" element={<Urls />} />\n          <Route path=\"urls\" element={<Urls />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Styles\nimport \"./styles/main.css\";\n\nimport { App } from \"./App\";\n\nconst MOUNT_NODE = document.getElementById(\"root\");\n\nReactDOM.render(<App />, MOUNT_NODE);\n"],"sourceRoot":""}